{"version":3,"sources":["src/array.ts","src/dollar.ts","src/elem.ts","src/http.ts","src/misc.ts","src/math.ts","src/string.ts"],"names":["Array","range","end","start","result","i","push","generate","n","func","map","prototype","groupsOf","group","this","length","last","sample","Math","floor","random","sampleAndRemove","remove","min","max","elem","splice","removeExact","$","onload","handler","document","readyState","window","addEventListener","q","selector","querySelector","qa","querySelectorAll","SVGNS","Elem","constructor","tagName","classes","styles","attrs","events","Map","parent","id","src","text","withStyle","rule","value","withClass","cls","more","forEach","c","withClassIf","predicate","childOf","withId","withText","replaceAll","withHtml","html","withSrc","withAttr","attr","on","event","set","buildNS","ns","e","createElementNS","classList","add","setAttribute","style","setProperty","textContent","appendChild","get","build","createElement","HTTP","verb","url","onProgress","onSuccess","onError","onComplete","req","XMLHttpRequest","self","evt","lengthComputable","apply","loaded","total","response","errorHandler","static","success","Function","TypeError","error","finally","progress","responseType","ty","send","open","isFunction","arg","toString","call","isNumber","num","xor","a","b","clamp","x","lerp","randomPointInCircle","angle","PI","r","cos","sin","randomNormalDeviate","u","v","y","abs","log","randomGammaDeviate","shape","undefined","oalph","a1","a2","sqrt","pow","betaSample","mean","variance","alpha","beta","randomIntRangeInclusive","trunc","Object","deepCopy","obj","temp","Date","key","hasOwnProperty","WeightedRandom","weights","duped","w","_","weight","roll","String","toTitleCase","chars","shift","toUpperCase","afterSpace","toLowerCase","toSnakeCase"],"mappings":"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","file":"jsplus.min.js","sourcesContent":["// Array constructor extensions ////////////////////////////////////////////////\r\n\r\n\r\ndeclare interface ArrayConstructor {\r\n    range(start: number, end?: number): Array<number>\r\n    generate<T>(n: number, func: (num: number) => T): Array<T>\r\n}\r\n\r\n\r\nArray.range = function(end: number) {\r\n\treturn Array.range(0, end)\r\n}\r\n\r\n\r\nArray.range = function(start: number, end: number): Array<number> {\r\n\tlet result = []\r\n    if (end < start) {\r\n        [start, end] = [end, start]\r\n    }\r\n    for (let i = start; i < end; ++i) {\r\n        result.push(i)\r\n    }\r\n\treturn result\r\n}\r\n\r\n\r\nArray.generate = function<T>(n: number, func: (num: number) => T): Array<T> {\r\n\treturn Array.range(n).map(func)\r\n}\r\n\r\n\r\n// Array extensions ////////////////////////////////////////////////////////////\r\n\r\n\r\ndeclare interface Array<T> {\r\n    groupsOf(n: number): Array<Array<T>>\r\n    last(): T|null\r\n    sample(): T\r\n    sampleAndRemove(): T\r\n    min(): number\r\n    max(): number\r\n    range(): number\r\n    remove(elem: T): void\r\n    removeExact(elem: T): void\r\n}\r\n\r\n\r\nArray.prototype.groupsOf = function(n: number) {\r\n\tlet result = []\r\n\tlet group = []\r\n\tfor (let i = 0; i < this.length; ++i) {\r\n\t\tgroup.push(this[i])\r\n\t\tif (i % n == n-1) {\r\n\t\t\tresult.push(group)\r\n\t\t\tgroup = []\r\n\t\t}\r\n\t}\r\n\tif (group.length > 0) {\r\n\t\tresult.push(group)\r\n\t}\r\n\treturn result\r\n}\r\n\r\n\r\nArray.prototype.last = function() {\r\n\treturn this.length > 0 ? this[this.length - 1] : null\r\n}\r\n\r\n\r\nArray.prototype.sample = function() {\r\n\treturn this[Math.floor(Math.random() * this.length)]\r\n}\r\n\r\n\r\nArray.prototype.sampleAndRemove = function() {\r\n\tlet result = this.sample()\r\n\tthis.remove(result)\r\n\treturn result\r\n}\r\n\r\n\r\nArray.prototype.min = function() {\r\n    if (this.length < 1) { throw \"Array.min() called on empty array.\"; }\r\n\r\n    let min = this[0];\r\n    for (let i = 1; i < this.length; ++i) {\r\n        if (this[i] < min) {\r\n            min = this[i];\r\n        }\r\n    }\r\n\r\n    return min;\r\n}\r\n\r\n\r\nArray.prototype.max = function() {\r\n    if (this.length < 1) { throw \"Array.max() called on empty array.\"; }\r\n\r\n    let max = this[0];\r\n    for (let i = 1; i < this.length; ++i) {\r\n        if (this[i] > max) {\r\n            max = this[i];\r\n        }\r\n    }\r\n\r\n    return max;\r\n}\r\n\r\n\r\nArray.prototype.range = function() {\r\n    return this.length > 0 ? (this.max() - this.min()) : 0\r\n}\r\n\r\n\r\nArray.prototype.remove = function(elem) {\r\n    let i = 0\r\n    while (i < this.length) {\r\n    \tif (this[i] == elem) { this.splice(i, 1) }\r\n    \telse { ++i }\r\n    }\r\n}\r\n\r\n\r\nArray.prototype.removeExact = function(elem) {\r\n    let i = 0\r\n    while (i < this.length) {\r\n    \tif (this[i] === elem) { this.splice(i, 1) }\r\n    \telse { ++i }\r\n    }\r\n}","// everybody's gotta have a dollar sign shortcut thing right\r\n\r\nvar $ = {\r\n\tonload: (handler: (e: Event) => void): void => {\r\n\t\tif (document.readyState === \"complete\") {\r\n\t\t\t// ensures the handler runs even if $.onload is called after the window onload event fires\r\n\t\t\thandler(null)\r\n\t\t}\r\n\t\telse window.addEventListener(\"load\", handler)\r\n\t},\r\n\tq: (selector: string): HTMLElement => document.querySelector(selector),\r\n\tqa: (selector: string): NodeList => document.querySelectorAll(selector)\r\n}\r\n","// Element builder /////////////////////////////////////////////////////////////\r\n\r\n\r\nconst SVGNS = \"http://www.w3.org/2000/svg\"\r\n\r\n\r\nclass Elem {\r\n\ttagName: string\r\n\tclasses: Array<string> = []\r\n\tstyles: Array<[string, string]> = []\r\n\tattrs: Array<[string, string]> = []\r\n\tevents: Map<string, Function> = new Map()\r\n\tparent: HTMLElement|SVGElement|null = null\r\n\tid: string|null = null\r\n\tsrc: string|null = null\r\n\ttext: string|null = null\r\n\r\n\tconstructor (tagName: string) {\r\n\t\tthis.tagName = tagName\r\n\t}\r\n\r\n\twithStyle(rule: string, value: string): Elem {\r\n\t\tthis.styles.push([rule, value])\r\n\t\treturn this\r\n\t}\r\n\r\n\twithClass(cls: string, ...more: string[]): Elem {\r\n\t\tthis.classes.push(cls)\r\n\t\tmore.forEach(c => this.classes.push(c))\r\n\t\treturn this\r\n\t}\r\n\r\n\twithClassIf(predicate: boolean, cls: string, ...more: string[]): Elem {\r\n\t\tif (predicate) {\r\n\t\t\tthis.classes.push(cls)\r\n\t\t\tmore.forEach(c => this.classes.push(c))\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\t\r\n\tchildOf(parent: HTMLElement|SVGElement): Elem {\r\n\t\tthis.parent = parent\r\n\t\treturn this\r\n\t}\r\n\t\r\n\twithId(id: string): Elem {\r\n\t\tthis.id = id\r\n\t\treturn this\r\n\t}\r\n\t\r\n\twithText(text: string) {\r\n\t\tthis.text = text.replaceAll('&', '&amp;')\r\n\t\t\t\t\t\t.replaceAll('<', '&lt;')\r\n\t\t\t\t\t\t.replaceAll('>', '&gt;')\r\n\t\t\t\t\t\t.replaceAll('\"', '&quot;')\r\n\t\t\t\t\t\t.replaceAll(\"'\", '&#039;')\r\n\t\treturn this\r\n\t}\r\n\t\r\n\twithHtml(html: string): Elem {\r\n\t\tthis.text = html\r\n\t\treturn this\r\n\t}\r\n\t\r\n\twithSrc(src: string): Elem {\r\n\t\tthis.src = src\r\n\t\treturn this\r\n\t}\r\n\t\r\n\twithAttr(attr: string, value: string): Elem {\r\n\t\tthis.attrs.push([attr, value])\r\n\t\treturn this\r\n\t}\r\n\t\r\n\ton(event: string, handler: Function): Elem {\r\n\t\tthis.events.set(event, handler)\r\n\t\treturn this\r\n\t}\r\n\r\n\tbuildNS(ns: string): Element {\r\n\t\tlet e = document.createElementNS(ns, this.tagName)\r\n\t\tthis.classes.forEach(c => e.classList.add(c))\r\n\t\tthis.attrs.forEach(([attr, value]) => e.setAttribute(attr, value))\r\n\t\tthis.styles.forEach(([rule, value]) => (e as any).style.setProperty(rule, value))\r\n\t\tif (this.id !== null) { e.id = this.id }\r\n\t\tif (this.text !== null) { e.textContent = this.text }\r\n\t\tif (this.src !== null) { (e as any).src = this.src }\r\n\t\r\n\t\tif (this.parent !== null) { this.parent.appendChild(e) }\r\n\t\r\n\t\tfor (let event in this.events) {\r\n\t\t\t(e as any).addEventListener(event, this.events.get(event), false)\r\n\t\t}\r\n\t\r\n\t\treturn e\r\n\t}\r\n\t\r\n\tbuild(): HTMLElement {\r\n\t\tlet e = document.createElement(this.tagName)\r\n\t\tthis.classes.forEach(c => e.classList.add(c))\r\n\t\tthis.attrs.forEach(([attr, value]) => e.setAttribute(attr, value))\r\n\t\tthis.styles.forEach(([rule, value]) => e.style.setProperty(rule, value))\r\n\t\tif (this.id !== null) { e.id = this.id }\r\n\t\tif (this.text !== null) { e.textContent = this.text }\r\n\t\tif (this.src !== null) { (e as any).src = this.src }\r\n\t\r\n\t\tif (this.parent !== null) { this.parent.appendChild(e) }\r\n\t\r\n\t\tfor (let event in this.events) {\r\n\t\t\t(e as any).addEventListener(event, this.events.get(event), false)\r\n\t\t}\r\n\t\r\n\t\treturn e\r\n\t}\r\n}\r\n","// HTTP ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// TODO: status codes, body/params, timeout, headers\r\n//HTTP.get(\"example.com\")\r\n//\t.urlParams([[\"q\", \"src\"], [\"id\", \"0\"]])\r\n//\t.body({})\r\n//\t.contentType(\"\")\r\n//\t.header(\"\", \"\")\r\n//\t.header(\"\", \"\")\r\n//\t.timeout(0)\r\n\r\nclass HTTP {\r\n    req: XMLHttpRequest\r\n    onProgress: ((response: any) => void)|null = null\r\n    onSuccess:  ((response: any) => void)|null = null\r\n    onError:    ((response: any) => void)|null = null\r\n    onComplete: ((response: any) => void)|null = null\r\n\r\n    constructor(public verb: string, public url: string) {\r\n        this.req = new XMLHttpRequest()\r\n\r\n        let self = this;\r\n        this.req.addEventListener(\"progress\", (evt) => {\r\n            if (self.onProgress !== null && evt.lengthComputable) {\r\n                self.onProgress.apply(self, [evt.loaded / evt.total]);\r\n            }\r\n        });\r\n        this.req.addEventListener(\"load\", (evt) => {\r\n            if (self.onSuccess !== null) {\r\n                self.onSuccess.apply(self, [self.req.response])\r\n            }\r\n            if (self.onComplete !== null) {\r\n                self.onComplete.apply(self, [self.req.response])\r\n            }\r\n        });\r\n        let errorHandler = (evt: any) => {\r\n            if (self.onError !== null) {\r\n                self.onError.apply(self, [self.req.response])\r\n            }\r\n            if (self.onComplete !== null) {\r\n                self.onComplete.apply(self, [self.req.response])\r\n            }\r\n        };\r\n        this.req.addEventListener(\"error\", errorHandler)\r\n        this.req.addEventListener(\"abort\", errorHandler)\r\n    }\r\n\r\n    static get(url: string) {\r\n        return new HTTP(\"GET\", url)\r\n    }\r\n\r\n    static post(url: string) {\r\n        return new HTTP(\"POST\", url)\r\n    }\r\n\r\n    static put(url: string) {\r\n        return new HTTP(\"PUT\", url)\r\n    }\r\n\r\n    static patch(url: string) {\r\n        return new HTTP(\"PATCH\", url)\r\n    }\r\n\r\n    static delete(url: string) {\r\n        return new HTTP(\"DELETE\", url)\r\n    }\r\n\r\n    success(handler: (response: any) => void) {\r\n        if (!(handler instanceof Function)) {\r\n            throw new TypeError(\"HTTP request success handler must be a function.\")\r\n        }\r\n        this.onSuccess = handler\r\n        return this\r\n    }\r\n\r\n    error(handler: (response: any) => void) {\r\n        if (!(handler instanceof Function)) {\r\n            throw new TypeError(\"HTTP request error handler must be a function.\")\r\n        }\r\n        this.onError = handler\r\n        return this\r\n    }\r\n\r\n    finally(handler: (response: any) => void) {\r\n        if (!(handler instanceof Function)) {\r\n            throw new TypeError(\"HTTP request complete handler must be a function.\")\r\n        }\r\n        this.onComplete = handler\r\n        return this\r\n    }\r\n\r\n    progress(handler: (response: any) => void) {\r\n        if (!(handler instanceof Function)) {\r\n            throw new TypeError(\"HTTP request progress handler must be a function.\")\r\n        }\r\n        this.onProgress = handler\r\n        return this\r\n    }\r\n\r\n    responseType(ty: XMLHttpRequestResponseType) {\r\n        this.req.responseType = ty\r\n        return this\r\n    }\r\n\r\n    send() {\r\n        this.req.open(this.verb, this.url)\r\n        this.req.send()\r\n        return this\r\n    }\r\n}\r\n","// Free-standing functions /////////////////////////////////////////////////////\r\n\r\nfunction isFunction(arg: any): boolean {\r\n  return toString.call(arg) === '[object Function]';\r\n}\r\n\r\n\r\nfunction isNumber(num: any): boolean {\r\n  return (typeof num === 'number') ? num - num === 0 : false;\r\n}\r\n\r\nfunction xor(a: boolean, b: boolean): boolean {\r\n\treturn (a && !b) || (!a && b);\r\n}\r\n\r\n\r\n// Object extensions ///////////////////////////////////////////////////////////\r\n\r\ndeclare interface Object {\r\n\tdeepCopy(obj: any): any\r\n}\r\n\r\nObject.deepCopy = function(obj) {\r\n\tif (obj === null || typeof (obj) !== 'object' || '__isActiveClone__' in obj) { return obj }\r\n\r\n\tlet temp = obj instanceof Date ? new Date(obj) : obj.constructor()\r\n\r\n    for (let key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            obj['__isActiveClone__'] = null\r\n            temp[key] = Object.deepCopy(obj[key])\r\n            delete obj['__isActiveClone__']\r\n        }\r\n    }\r\n    return temp\r\n}\r\n\r\n\r\n// Weighted random /////////////////////////////////////////////////////////////\r\n\r\nclass WeightedRandom<T> {\r\n\tduped: Array<T>|null = null\r\n\r\n\tconstructor(public weights: Array<{ weight: number, value: T }>) { }\r\n\r\n\tsample(): T {\r\n\t\tif (this.duped === null) {\r\n\t\t\tthis.duped = []\r\n\t\t\tfor (let w of this.weights) {\r\n\t\t\t\tfor (let _ of [...Array(w.weight)]) { this.duped.push(w.value) }\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet roll = Math.floor(Math.random() * this.duped.length)\r\n\t\treturn this.duped[roll]\r\n\t}\r\n}\r\n","// Math extensions /////////////////////////////////////////////////////////////\r\n\r\n\r\ndeclare interface Math {\r\n    clamp(x: number, min: number, max: number): number\r\n    lerp(a: number, b: number, x: number): number\r\n    randomPointInCircle(): [number, number]\r\n    randomNormalDeviate(): number\r\n    randomGammaDeviate(shape?: number): number\r\n    betaSample(mean: number, variance: number): number\r\n    randomIntRangeInclusive(min: number, max: number): number\r\n}\r\n\r\n\r\nMath.clamp = function(x: number, min: number, max: number): number {\r\n\treturn Math.min(Math.max(min, x), max)\r\n}\r\n\r\n\r\nMath.lerp = function(a: number, b: number, x: number): number {\r\n\treturn (a * (1-x)) + (b * x)\r\n}\r\n\r\n\r\nMath.randomPointInCircle = function() {\r\n    let angle = Math.random() * 2.0 * Math.PI\r\n    let r = Math.random() + Math.random()\r\n    if (r > 1) { r = 2 - r; }\r\n    return [r * Math.cos(angle), r * Math.sin(angle)]\r\n}\r\n\r\n\r\nMath.randomNormalDeviate = function(): number {\r\n\tlet u, v, q\r\n\tdo {\r\n\t\tu = Math.random()\r\n\t\tv = 1.7156 * (Math.random() - 0.5)\r\n\t\tlet x = u - 0.449871\r\n\t\tlet y = Math.abs(v) + 0.386595\r\n\t\tq = x * x + y * (0.19600 * y - 0.25472 * x)\r\n\t} while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u))\r\n\treturn v / u\r\n}\r\n\r\n\r\nMath.randomGammaDeviate = function(shape?: number): number {\r\n  if (shape === undefined)\r\n    shape = 1\r\n  let oalph = shape\r\n  let u = 0\r\n  let v = 0\r\n  let x = 0\r\n  if (shape < 1)\r\n    shape += 1\r\n  let a1 = shape - 1 / 3\r\n  let a2 = 1 / Math.sqrt(9 * a1)\r\n  do {\r\n    do {\r\n      x = Math.randomNormalDeviate()\r\n      v = 1 + a2 * x\r\n    } while(v <= 0)\r\n    v = v * v * v\r\n    u = Math.random()\r\n  } while(u > 1 - 0.331 * Math.pow(x, 4) && Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)))\r\n  // alpha > 1\r\n  if (shape == oalph)\r\n    return a1 * v\r\n  // alpha < 1\r\n  do {\r\n    u = Math.random()\r\n  } while(u === 0)\r\n  return Math.pow(u, 1 / oalph) * a1 * v\r\n}\r\n\r\n\r\n// Returns a random sample from a beta distribution with the given mean and variance.\r\n// 0 variance is undefined\r\n// v = 0 to 0.35 is a bell curve\r\n// v ~= 0.35 is uniform\r\n// v > 0.35 is an inverse bell curve\r\nMath.betaSample = function(mean, variance) {\r\n    let n = (mean * (1.0 - mean)) / (variance * variance)\r\n    let alpha = mean * n\r\n    let beta = (1.0 - mean) * n\r\n    let u = Math.randomGammaDeviate(alpha)\r\n    return u / (u + Math.randomGammaDeviate(beta))\r\n}\r\n\r\n\r\nMath.randomIntRangeInclusive = function(min: number, max: number) {\r\n\tmin = Math.trunc(min)\r\n\tmax = Math.trunc(max) + 1\r\n\treturn Math.floor(Math.random() * (max-min)) + min\r\n}","// String extensions ///////////////////////////////////////////////////////////\r\n\r\n\r\ndeclare interface String {\r\n    toTitleCase(): String\r\n    toSnakeCase(): String\r\n    last(): String\r\n}\r\n\r\n\r\nString.prototype.toTitleCase = function(): String {\r\n\tlet chars = [...this]\r\n\tlet result = chars.shift().toUpperCase()\r\n\tlet afterSpace = false\r\n\tfor (let c of chars) {\r\n\t\tif (c === \" \" || c === \"_\") {\r\n\t\t\tafterSpace = true\r\n\t\t\tresult += \" \"\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (afterSpace) {\r\n\t\t\t\tresult += c.toUpperCase()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult += c.toLowerCase()\r\n\t\t\t}\r\n\t\t\tafterSpace = false\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}\r\n\r\nString.prototype.toSnakeCase = function(): String {\r\n\treturn this.toLowerCase().replaceAll(\" \", \"_\")\r\n}\r\n\r\nString.prototype.last = function(): String { return [...this].last() }"]}